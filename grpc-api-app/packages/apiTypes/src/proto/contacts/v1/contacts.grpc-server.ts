// @generated by protobuf-ts 2.8.2 with parameter generate_dependencies,long_type_string,server_grpc1,client_grpc1
// @generated from protobuf file "proto/contacts/v1/contacts.proto" (package "proto.contacts.v1", syntax proto3)
// tslint:disable
import { CreateContactResponse } from "./contacts";
import { CreateContactRequest } from "./contacts";
import { Empty } from "../../../google/protobuf/empty";
import { DeleteContactRequest } from "./contacts";
import { UpdateContactResponse } from "./contacts";
import { UpdateContactRequest } from "./contacts";
import { GetContactResponse } from "./contacts";
import { GetContactRequest } from "./contacts";
import { ListContactsResponse } from "./contacts";
import { ListContactsRequest } from "./contacts";
import type * as grpc from "@grpc/grpc-js";
/**
 * An API for managing a collection of contacts.
 *
 * @generated from protobuf service proto.contacts.v1.ContactsService
 */
export interface IContactsService extends grpc.UntypedServiceImplementation {
    /**
     * List all available contacts.
     *
     * @generated from protobuf rpc: ListContacts(proto.contacts.v1.ListContactsRequest) returns (proto.contacts.v1.ListContactsResponse);
     */
    listContacts: grpc.handleUnaryCall<ListContactsRequest, ListContactsResponse>;
    /**
     * Retrieves a specific contact.
     *
     * @generated from protobuf rpc: GetContact(proto.contacts.v1.GetContactRequest) returns (proto.contacts.v1.GetContactResponse);
     */
    getContact: grpc.handleUnaryCall<GetContactRequest, GetContactResponse>;
    /**
     * Updates a contact with the provided information.
     *
     * @generated from protobuf rpc: UpdateContact(proto.contacts.v1.UpdateContactRequest) returns (proto.contacts.v1.UpdateContactResponse);
     */
    updateContact: grpc.handleUnaryCall<UpdateContactRequest, UpdateContactResponse>;
    /**
     * Deletes a contact with the provided id.
     *
     * @generated from protobuf rpc: DeleteContact(proto.contacts.v1.DeleteContactRequest) returns (google.protobuf.Empty);
     */
    deleteContact: grpc.handleUnaryCall<DeleteContactRequest, Empty>;
    /**
     * Creates a contact.
     *
     * @generated from protobuf rpc: CreateContact(proto.contacts.v1.CreateContactRequest) returns (proto.contacts.v1.CreateContactResponse);
     */
    createContact: grpc.handleUnaryCall<CreateContactRequest, CreateContactResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service proto.contacts.v1.ContactsService.
 *
 * Usage: Implement the interface IContactsService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IContactsService = ...
 * server.addService(contactsServiceDefinition, service);
 * ```
 */
export const contactsServiceDefinition: grpc.ServiceDefinition<IContactsService> = {
    listContacts: {
        path: "/proto.contacts.v1.ContactsService/ListContacts",
        originalName: "ListContacts",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ListContactsResponse.fromBinary(bytes),
        requestDeserialize: bytes => ListContactsRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ListContactsResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(ListContactsRequest.toBinary(value))
    },
    getContact: {
        path: "/proto.contacts.v1.ContactsService/GetContact",
        originalName: "GetContact",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetContactResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetContactRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetContactResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetContactRequest.toBinary(value))
    },
    updateContact: {
        path: "/proto.contacts.v1.ContactsService/UpdateContact",
        originalName: "UpdateContact",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => UpdateContactResponse.fromBinary(bytes),
        requestDeserialize: bytes => UpdateContactRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(UpdateContactResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(UpdateContactRequest.toBinary(value))
    },
    deleteContact: {
        path: "/proto.contacts.v1.ContactsService/DeleteContact",
        originalName: "DeleteContact",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Empty.fromBinary(bytes),
        requestDeserialize: bytes => DeleteContactRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Empty.toBinary(value)),
        requestSerialize: value => Buffer.from(DeleteContactRequest.toBinary(value))
    },
    createContact: {
        path: "/proto.contacts.v1.ContactsService/CreateContact",
        originalName: "CreateContact",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => CreateContactResponse.fromBinary(bytes),
        requestDeserialize: bytes => CreateContactRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(CreateContactResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(CreateContactRequest.toBinary(value))
    }
};
