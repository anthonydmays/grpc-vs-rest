// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file proto/contacts/v1/contacts.proto (package proto.contacts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Describes a ListContacts request with paging information.
 *
 * @generated from message proto.contacts.v1.ListContactsRequest
 */
export class ListContactsRequest extends Message<ListContactsRequest> {
  /**
   * @generated from field: int32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: int32 page_number = 2;
   */
  pageNumber = 0;

  /**
   * @generated from field: string order_by = 3;
   */
  orderBy = "";

  constructor(data?: PartialMessage<ListContactsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.ListContactsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListContactsRequest {
    return new ListContactsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListContactsRequest {
    return new ListContactsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListContactsRequest {
    return new ListContactsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListContactsRequest | PlainMessage<ListContactsRequest> | undefined, b: ListContactsRequest | PlainMessage<ListContactsRequest> | undefined): boolean {
    return proto3.util.equals(ListContactsRequest, a, b);
  }
}

/**
 * Describes a ListContacts response with paging information.
 *
 * @generated from message proto.contacts.v1.ListContactsResponse
 */
export class ListContactsResponse extends Message<ListContactsResponse> {
  /**
   * @generated from field: repeated proto.contacts.v1.Contact contacts = 1;
   */
  contacts: Contact[] = [];

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * @generated from field: int32 page_number = 3;
   */
  pageNumber = 0;

  /**
   * @generated from field: string order_by = 4;
   */
  orderBy = "";

  /**
   * @generated from field: int32 total_count = 5;
   */
  totalCount = 0;

  constructor(data?: PartialMessage<ListContactsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.ListContactsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contacts", kind: "message", T: Contact, repeated: true },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListContactsResponse {
    return new ListContactsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListContactsResponse {
    return new ListContactsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListContactsResponse {
    return new ListContactsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListContactsResponse | PlainMessage<ListContactsResponse> | undefined, b: ListContactsResponse | PlainMessage<ListContactsResponse> | undefined): boolean {
    return proto3.util.equals(ListContactsResponse, a, b);
  }
}

/**
 * Describes a GetContact request.
 *
 * @generated from message proto.contacts.v1.GetContactRequest
 */
export class GetContactRequest extends Message<GetContactRequest> {
  /**
   * @generated from field: string uri = 1;
   */
  uri = "";

  constructor(data?: PartialMessage<GetContactRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.GetContactRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetContactRequest {
    return new GetContactRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetContactRequest {
    return new GetContactRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetContactRequest {
    return new GetContactRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetContactRequest | PlainMessage<GetContactRequest> | undefined, b: GetContactRequest | PlainMessage<GetContactRequest> | undefined): boolean {
    return proto3.util.equals(GetContactRequest, a, b);
  }
}

/**
 * Describes a GetContact response.
 *
 * @generated from message proto.contacts.v1.GetContactResponse
 */
export class GetContactResponse extends Message<GetContactResponse> {
  /**
   * @generated from field: proto.contacts.v1.Contact contact = 1;
   */
  contact?: Contact;

  constructor(data?: PartialMessage<GetContactResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.GetContactResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contact", kind: "message", T: Contact },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetContactResponse {
    return new GetContactResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetContactResponse {
    return new GetContactResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetContactResponse {
    return new GetContactResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetContactResponse | PlainMessage<GetContactResponse> | undefined, b: GetContactResponse | PlainMessage<GetContactResponse> | undefined): boolean {
    return proto3.util.equals(GetContactResponse, a, b);
  }
}

/**
 * Describes an UpdateContact request.
 *
 * @generated from message proto.contacts.v1.UpdateContactRequest
 */
export class UpdateContactRequest extends Message<UpdateContactRequest> {
  /**
   * @generated from field: proto.contacts.v1.Contact contact = 1;
   */
  contact?: Contact;

  constructor(data?: PartialMessage<UpdateContactRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.UpdateContactRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contact", kind: "message", T: Contact },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContactRequest {
    return new UpdateContactRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContactRequest {
    return new UpdateContactRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContactRequest {
    return new UpdateContactRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateContactRequest | PlainMessage<UpdateContactRequest> | undefined, b: UpdateContactRequest | PlainMessage<UpdateContactRequest> | undefined): boolean {
    return proto3.util.equals(UpdateContactRequest, a, b);
  }
}

/**
 * Describes an UpdateContact response.
 *
 * @generated from message proto.contacts.v1.UpdateContactResponse
 */
export class UpdateContactResponse extends Message<UpdateContactResponse> {
  /**
   * @generated from field: proto.contacts.v1.Contact contact = 1;
   */
  contact?: Contact;

  constructor(data?: PartialMessage<UpdateContactResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.UpdateContactResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contact", kind: "message", T: Contact },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContactResponse {
    return new UpdateContactResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContactResponse {
    return new UpdateContactResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContactResponse {
    return new UpdateContactResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateContactResponse | PlainMessage<UpdateContactResponse> | undefined, b: UpdateContactResponse | PlainMessage<UpdateContactResponse> | undefined): boolean {
    return proto3.util.equals(UpdateContactResponse, a, b);
  }
}

/**
 * An individual contact item.
 *
 * @generated from message proto.contacts.v1.Contact
 */
export class Contact extends Message<Contact> {
  /**
   * @generated from field: string uri = 1;
   */
  uri = "";

  /**
   * @generated from field: string first_name = 2;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 3;
   */
  lastName = "";

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  constructor(data?: PartialMessage<Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.contacts.v1.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contact {
    return new Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contact {
    return new Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contact {
    return new Contact().fromJsonString(jsonString, options);
  }

  static equals(a: Contact | PlainMessage<Contact> | undefined, b: Contact | PlainMessage<Contact> | undefined): boolean {
    return proto3.util.equals(Contact, a, b);
  }
}

