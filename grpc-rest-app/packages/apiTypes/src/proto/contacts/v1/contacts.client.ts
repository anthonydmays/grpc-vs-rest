// @generated by protobuf-ts 2.8.2 with parameter generate_dependencies,long_type_string,server_generic,client_generic
// @generated from protobuf file "proto/contacts/v1/contacts.proto" (package "proto.contacts.v1", syntax proto3)
// tslint:disable
import type {
  RpcOptions,
  RpcTransport,
  ServiceInfo,
  UnaryCall,
} from '@protobuf-ts/runtime-rpc';
import { stackIntercept } from '@protobuf-ts/runtime-rpc';
import type { Empty } from '../../../google/protobuf/empty.js';
import type {
  CreateContactRequest,
  CreateContactResponse,
  DeleteContactRequest,
  GetContactRequest,
  GetContactResponse,
  ListContactsRequest,
  ListContactsResponse,
  UpdateContactRequest,
  UpdateContactResponse,
} from './contacts.js';
import { ContactsService } from './contacts.js';
/**
 * An API for managing a collection of contacts.
 *
 * @generated from protobuf service proto.contacts.v1.ContactsService
 */
export interface IContactsServiceClient {
  /**
   * List all available contacts.
   *
   * @generated from protobuf rpc: ListContacts(proto.contacts.v1.ListContactsRequest) returns (proto.contacts.v1.ListContactsResponse);
   */
  listContacts(
    input: ListContactsRequest,
    options?: RpcOptions,
  ): UnaryCall<ListContactsRequest, ListContactsResponse>;
  /**
   * Retrieves a specific contact.
   *
   * @generated from protobuf rpc: GetContact(proto.contacts.v1.GetContactRequest) returns (proto.contacts.v1.GetContactResponse);
   */
  getContact(
    input: GetContactRequest,
    options?: RpcOptions,
  ): UnaryCall<GetContactRequest, GetContactResponse>;
  /**
   * Updates a contact with the provided information.
   *
   * @generated from protobuf rpc: UpdateContact(proto.contacts.v1.UpdateContactRequest) returns (proto.contacts.v1.UpdateContactResponse);
   */
  updateContact(
    input: UpdateContactRequest,
    options?: RpcOptions,
  ): UnaryCall<UpdateContactRequest, UpdateContactResponse>;
  /**
   * Deletes a contact with the provided id.
   *
   * @generated from protobuf rpc: DeleteContact(proto.contacts.v1.DeleteContactRequest) returns (google.protobuf.Empty);
   */
  deleteContact(
    input: DeleteContactRequest,
    options?: RpcOptions,
  ): UnaryCall<DeleteContactRequest, Empty>;
  /**
   * Creates a contact.
   *
   * @generated from protobuf rpc: CreateContact(proto.contacts.v1.CreateContactRequest) returns (proto.contacts.v1.CreateContactResponse);
   */
  createContact(
    input: CreateContactRequest,
    options?: RpcOptions,
  ): UnaryCall<CreateContactRequest, CreateContactResponse>;
}
/**
 * An API for managing a collection of contacts.
 *
 * @generated from protobuf service proto.contacts.v1.ContactsService
 */
export class ContactsServiceClient
  implements IContactsServiceClient, ServiceInfo
{
  typeName = ContactsService.typeName;
  methods = ContactsService.methods;
  options = ContactsService.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * List all available contacts.
   *
   * @generated from protobuf rpc: ListContacts(proto.contacts.v1.ListContactsRequest) returns (proto.contacts.v1.ListContactsResponse);
   */
  listContacts(
    input: ListContactsRequest,
    options?: RpcOptions,
  ): UnaryCall<ListContactsRequest, ListContactsResponse> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<ListContactsRequest, ListContactsResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * Retrieves a specific contact.
   *
   * @generated from protobuf rpc: GetContact(proto.contacts.v1.GetContactRequest) returns (proto.contacts.v1.GetContactResponse);
   */
  getContact(
    input: GetContactRequest,
    options?: RpcOptions,
  ): UnaryCall<GetContactRequest, GetContactResponse> {
    const method = this.methods[1],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<GetContactRequest, GetContactResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * Updates a contact with the provided information.
   *
   * @generated from protobuf rpc: UpdateContact(proto.contacts.v1.UpdateContactRequest) returns (proto.contacts.v1.UpdateContactResponse);
   */
  updateContact(
    input: UpdateContactRequest,
    options?: RpcOptions,
  ): UnaryCall<UpdateContactRequest, UpdateContactResponse> {
    const method = this.methods[2],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<UpdateContactRequest, UpdateContactResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * Deletes a contact with the provided id.
   *
   * @generated from protobuf rpc: DeleteContact(proto.contacts.v1.DeleteContactRequest) returns (google.protobuf.Empty);
   */
  deleteContact(
    input: DeleteContactRequest,
    options?: RpcOptions,
  ): UnaryCall<DeleteContactRequest, Empty> {
    const method = this.methods[3],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<DeleteContactRequest, Empty>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * Creates a contact.
   *
   * @generated from protobuf rpc: CreateContact(proto.contacts.v1.CreateContactRequest) returns (proto.contacts.v1.CreateContactResponse);
   */
  createContact(
    input: CreateContactRequest,
    options?: RpcOptions,
  ): UnaryCall<CreateContactRequest, CreateContactResponse> {
    const method = this.methods[4],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<CreateContactRequest, CreateContactResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
}
